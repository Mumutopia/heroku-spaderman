{"version":3,"sources":["js/socket.js","js/board.js","components/GameListen.jsx","components/GameDisplay.jsx","components/GameBoard.jsx","components/DisplayWinner.jsx","api/APIHandler.js","views/Game.jsx","views/Leaderboard.jsx","components/MainTitle.jsx","views/Index.jsx","components/ButtonLink.jsx","auth/UserContext.jsx","components/Logout.jsx","views/Home.jsx","views/Play.jsx","views/Lobby.jsx","views/Signin.jsx","views/Signup.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["socket","socketIOClient","board","GameListen","storeEvent","handleOther","console","log","useEffect","window","addEventListener","event","GameDisplay","myXPosition","myYPosition","otherXPosition","otherYPosition","myScore","otherScore","myBomb","otherBomb","timer","GameBoard","fusionFunction","i","j","classes","store","push","undefined","includes","filter","c","join","getCSSClass","id","map","x","y","className","DisplayWinner","displayResult","APIHandler","axios","create","baseURL","process","withCredentials","bombAudio","Audio","digAudio","Game","useState","setMyxPosition","setMyyPosition","setOtherXPosition","setOtherYPosition","boardGame","setBoardGame","setEvent","setMyScore","setOtherScore","setMyBomb","setOtherBomb","isBusy","setIsBusy","isStunned","setIsStunned","gameTimer","setGameTimer","hideStartButton","setHideStartButton","setDisplayResult","myXPositionRef","useRef","myYPositionRef","otherXPositionRef","otherYPositionRef","gameTimerRef","params","useParams","room","myScoreRef","otherScoreRef","current","cloneBoard","leaveGame","a","delete","error","saveResult","result","player","score","handlingInput","key","length","dig","Math","floor","random","play","setTimeout","plantBomb","bombPlanted","checkRadius","emit","plantedBomb","bomb","radius","xPos","yPos","bufferValue","addRadiusX","addRadiusY","removeRadiusX","removeRadiusY","originalValue","on","props","data","message","gameTime","setInterval","time","clearInterval","startGame","evt","onClick","to","Leaderboard","displayData","setDisplayData","fetchData","get","dataBoard","MainTitle","src","alt","Index","ButtonLink","style","textDecoration","pathname","name","children","UserContext","React","createContext","UserContextProvider","currentUser","setCurrentUser","isLoading","setIsLoading","then","res","catch","isLoggedIn","Boolean","Provider","value","useAuth","useContext","Logout","post","finally","Home","Play","createRoom","SetcreateRoom","test","rooms","setRooms","handleClick","e","toSend","roomName","preventDefault","fetchRooms","dataRooms","isNaN","_id","state","numberOfPlayers","onSubmit","type","onChange","target","Lobby","Signin","email","setEmail","password","setPassword","handleSubmit","apiRes","username","htmlFor","MyComponent","Signup","history","handleChange","setState","this","userContext","defaultValue","Component","withAuth","Consumer","context","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8dAGaA,EAASC,YADL,mCCWJC,EAAQ,CAAC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,MACjE,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,MAClD,CAAC,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,KAC9C,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,KAClD,CAAC,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,MAClD,CAAC,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KACjD,CAAC,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAChD,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,KACjD,CAAC,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,M,cCfnC,SAASC,EAAT,GAA+C,IAA1BC,EAAyB,EAAzBA,WAAyB,EAAdC,YAc3C,OAZJC,QAAQC,IAAI,UAEZC,qBAAU,WACNC,OAAOC,iBAAiB,SAAS,SAACC,GAC9BP,EAAWO,QAGjB,IAMM,wBCpBO,SAASC,EAAT,GAUX,IATFC,EASC,EATDA,YACAC,EAQC,EARDA,YACAC,EAOC,EAPDA,eACAC,EAMC,EANDA,eACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,UACAC,EACC,EADDA,MAIA,OACE,6CACaR,EADb,IAC2BC,EAD3B,iBACsDC,EADtD,IAEGC,EAFH,eAE+BC,EAF/B,gBAGgBC,EAHhB,aAIaC,EAJb,iBAKiBC,EALjB,eAMeC,K,MCnBJ,SAASC,EAAT,GAOX,IANFpB,EAMC,EANDA,MACAW,EAKC,EALDA,YACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,eAiCMO,EAAiB,SAACC,EAAGC,GACzB,OA7BkB,SAACD,EAAGC,GACtB,IAAMC,EAAU,GACVC,EAAQzB,EAAMsB,GAAGC,GAWvB,OAVAC,EAAQE,KACNJ,IAAMV,GAAeW,IAAMZ,EAAc,gBAAagB,GAGxDH,EAAQE,KAAMD,EAAMG,SAAS,KAAO,aAAUD,GAC9CH,EAAQE,KAAMD,EAAMG,SAAS,KAAO,mBAAgBD,GACpDH,EAAQE,KACNJ,IAAMR,GAAkBS,IAAMV,EAAiB,mBAAgBc,GAEjEH,EAAQE,KAAqB,MAAhB1B,EAAMsB,GAAGC,GAAa,WAAQI,GACpCH,EAAQK,QAAO,SAACC,GAAD,YAAaH,IAANG,KAAiBC,KAAK,KAgB5CC,CAAYV,EAAGC,GAAK,IAZX,GAEDM,QAAO,SAACC,GAAD,YAAaH,IAANG,KAAiBC,KAAK,MAarD,OACE,qBAAKE,GAAG,oBAAR,SACE,qBAAKA,GAAG,gBAAR,SACGjC,EAAMkC,KAAI,SAACC,EAAGb,GAAJ,OACTa,EAAED,KAAI,SAACE,EAAGb,GAAJ,OACJ,qBACEc,UAAWhB,EAAeC,EAAGC,GAC7B,aAAY,CAAEY,EAAGZ,EAAGa,EAAGd,GACvB,SAAQC,EACR,SAAQD,EAERW,GAAIV,EAAI,IAAMD,GADTC,EAAI,IAAMD,aCrDd,SAASgB,EAAT,GAA8D,IAArCvB,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,WAAWuB,EAAgB,EAAhBA,cAE1D,OADAnC,QAAQC,IAAIkC,GACRxB,IAAYC,EACP,mBAAGqB,UAAWE,EAAd,kBAEAxB,EAAUC,EAAa,mBAAGqB,UAAWE,EAAd,qBAA2C,mBAAGF,UAAWE,EAAd,uB,YCC9DC,E,OALIC,EAAMC,OAAO,CAC9BC,QAASC,kCACTC,iBAAiB,ICOfC,EAAY,CACd,IAAIC,MAAM,qBACV,IAAIA,MAAM,qBACV,IAAIA,MAAM,qBACV,IAAIA,MAAM,qBACV,IAAIA,MAAM,sBAGRC,EAAW,CACb,IAAID,MAAM,uBACV,IAAIA,MAAM,yBAGI,IAAIA,MAAM,2BACV,IAAIA,MAAM,sBACV,IAAIA,MAAM,sBAGxB,IAAIA,MAAM,wBACV,IAAIA,MAAM,yBACV,IAAIA,MAAM,yBAiBG,SAASE,IAGtB,MAAsCC,mBAAS,GAA/C,mBAAOvC,EAAP,KAAoBwC,EAApB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOtC,EAAP,KAAoBwC,EAApB,KACA,EAA4CF,mBAAS,GAArD,mBAAOrC,EAAP,KAAuBwC,EAAvB,KACA,EAA4CH,mBAAS,GAArD,mBAAOpC,EAAP,KAAuBwC,EAAvB,KACA,EAAkCJ,mBAASlD,GAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOzC,EAAP,KAAcgD,EAAd,KACA,EAA8BP,mBAAS,GAAvC,mBAAOnC,EAAP,KAAgB2C,EAAhB,KACA,EAAoCR,mBAAS,GAA7C,mBAAOlC,EAAP,KAAmB2C,EAAnB,KACA,EAA4BT,mBAAS,IAArC,mBAAOjC,EAAP,KAAe2C,EAAf,KACA,EAAkCV,mBAAS,IAA3C,oBAAOhC,GAAP,MAAkB2C,GAAlB,MACA,GAA4BX,oBAAS,GAArC,qBAAOY,GAAP,MAAeC,GAAf,MACA,GAAkCb,oBAAS,GAA3C,qBAAOc,GAAP,MAAkBC,GAAlB,MACA,GAAkCf,mBAAS,IAA3C,qBAAOgB,GAAP,MAAkBC,GAAlB,MACA,GAA6CjB,qBAA7C,qBAAOkB,GAAP,MAAuBC,GAAvB,MACA,GAAyCnB,mBAAS,eAAlD,qBAAOX,GAAP,MAAqB+B,GAArB,MACMC,GAAiBC,iBAAO7D,GACxB8D,GAAiBD,iBAAO5D,GACxB8D,GAAoBF,iBAAO3D,GAC3B8D,GAAoBH,iBAAO1D,GAC3B8D,GAAeJ,iBAAON,IACtBW,GAASC,cACTC,GAAOF,GAAO5C,GACd+C,GAAaR,iBAAOzD,GACpBkE,GAAeT,iBAAOxD,GAE5BuD,GAAeW,QAAUvE,EACzB8D,GAAeS,QAAUtE,EACzB8D,GAAkBQ,QAAUrE,EAC5B8D,GAAkBO,QAAUpE,EAC5B8D,GAAaM,QAAUhB,GACvBc,GAAWE,QAAUnE,EACrBkE,GAAcC,QAAUlE,EAExB,IAEImE,GAEEC,GAAS,uCAAG,sBAAAC,EAAA,+EAER7C,EAAW8C,OAAX,iBAA4BP,KAFpB,sDAId3E,QAAQmF,MAAR,MAJc,wDAAH,qDA8Bf,IAAMC,GAAU,uCAAG,4BAAAH,EAAA,sDACXI,EAAS,CACbC,OAAO,OACPC,MAAQX,GAAWE,QACnBlE,WAAaiE,GAAcC,SAE7B9E,QAAQC,IAAIoF,GANK,2CAAH,qDAchB,IAAMG,GAAgB,SAACnF,GACrB,IAAKqD,KAAWE,GACd,OAAQvD,EAAMoF,KACZ,IAAK,aACH1C,GAAe,SAACxC,GAAD,OACbA,EAAcX,EAAM8F,OAAS,EAAInF,EAAc,EAAIA,KAGrD,MACF,IAAK,YACHyC,GAAe,SAACxC,GAAD,OACbA,EAAcZ,EAAM8F,OAAS,EAAIlF,EAAc,EAAIA,KAErD,MACF,IAAK,UACHwC,GAAe,SAACxC,GAAD,OACbA,EAAc,EAAIA,EAAc,EAAIA,KAEtC,MACF,IAAK,YACHuC,GAAe,SAACxC,GACd,OAAOA,EAAc,EAAIA,EAAc,EAAIA,KAE7C,MACF,IAAK,IACHoF,GAAIpF,EAAaC,GACjBoC,EAASgD,KAAKC,MAAsB,EAAhBD,KAAKE,WAAeC,OACxCpC,IAAU,GACVqC,YAAW,WACTrC,IAAU,KACT,KACH,MACF,IAAK,IACC9C,EAAS,IACXoF,GAAU1F,EAAaC,GA2BjC,WACE,IAAM0F,EAAc,CAAC3F,EAAaC,GAClCR,QAAQC,IAAI,YAAaiG,GACzBF,YAAW,WAEPG,GACED,EAnHW,EAqHX/B,GAAeW,QACfT,GAAeS,WAGjBxB,GAAW,SAAC3C,GAAD,OAAaA,EAAU,OAClCkD,IAAa,GACbmC,YAAW,WACTnC,IAAa,KACZ,OAIHsC,GACED,EAlIW,EAoIX5B,GAAkBQ,QAClBP,GAAkBO,WAGpBpF,EAAO0G,KAAK,cAAezB,IAAM,GACjCqB,YAAW,WACTtG,EAAO0G,KAAK,cAAezB,IAAM,KAChC,SAEJ,KA1DK0B,GACA7C,GAAU,SAAC3C,GAAD,OAAYA,EAAS,QAWzC,SAASsF,GAAYG,EAAMC,EAAQC,EAAMC,GAGvC,OAFAzG,QAAQC,IAAIuG,EAAMC,GAGhBH,EAAK,GAAKC,GAAUC,GACpBF,EAAK,GAAKC,GAAUC,GACpBF,EAAK,GAAKC,GAAUE,GACpBH,EAAK,GAAKC,GAAUE,IACnBH,EAAK,KAAOE,GAAQF,EAAK,KAAOG,GAyCrC,IAAMR,GAAY,SAAClE,EAAGC,GAEpB,IAAM0E,GADN3B,GAAU,YAAO5B,IACcnB,GAAGD,GAClCgD,GAAW/C,GAAGD,IAAM,IAEpBqB,EAAa2B,IACbrF,EAAO0G,KAAK,WAAYzB,GAAMxB,GAC9B6C,YAAW,WACTjB,GAAW/C,GAAGD,GAAK2E,EAAY,GAC/B1G,QAAQC,IAAI8E,IACZ4B,GAAW5E,EAAGC,GACd4E,GAAW7E,EAAGC,GACdtC,EAAO0G,KAAK,WAAYzB,GAAMxB,GAC9BT,EAAUkD,KAAKC,MAAsB,EAAhBD,KAAKE,WAAeC,OACzCC,YAAW,WACTa,GAAc9E,EAAGC,GACjB8E,GAAc/E,EAAGC,GACjBtC,EAAO0G,KAAK,WAAYzB,GAAMxB,KAC7B,OACF,MAGCwD,GAAa,SAAC5E,EAAGC,GACrB,IAAK,IAAId,GAvKQ,EAuKSA,GAvKT,EAuK0BA,SACZK,IAAzBwD,GAAW/C,GAAGD,EAAIb,KACpB6D,GAAW/C,GAAGD,EAAIb,IAAM,KAG5BkC,EAAa2B,KAET6B,GAAa,SAAC7E,EAAGC,GACrB,IAAK,IAAId,GA/KQ,EA+KSA,GA/KT,EA+K0BA,IACrCc,EAAId,GAAK,GAAKc,EAAId,EAAI,KACxB6D,GAAW/C,EAAId,GAAGa,IAAM,KAG5BqB,EAAa2B,KAGT8B,GAAgB,SAAC9E,EAAGC,GACxB,IAAK,IAAId,GAxLQ,EAwLSA,GAxLT,EAwL0BA,IACzC,QAA6BK,IAAzBwD,GAAW/C,GAAGD,EAAIb,GAAkB,CACtC,IAAI6F,EAAgB5D,EAAUnB,GAAGD,EAAIb,GACrC6D,GAAW/C,GAAGD,EAAIb,GAAK6F,EAAc,GAGzC3D,EAAa2B,KAGT+B,GAAgB,SAAC/E,EAAGC,GACxB,IAAK,IAAId,GAlMQ,EAkMSA,GAlMT,EAkM0BA,IACzC,GAAIc,EAAId,GAAK,GAAKc,EAAId,EAAI,GAAI,CAC5B,IAAI6F,EAAgB5D,EAAUnB,EAAId,GAAGa,GACrCgD,GAAW/C,EAAId,GAAGa,GAAKgF,EAAc,GAGzC3D,EAAa2B,KAGTY,GAAM,SAAC5D,EAAGC,GAGd,OAFA+C,GAAU,YAAO5B,GAETA,EAAUnB,GAAGD,IACnB,IAAK,IACHgD,GAAW/C,GAAGD,GAAK,IACnBqB,EAAa2B,IACbzB,GAAW,SAAC3C,GAAD,OAAaA,EAAU,OAElC,MACF,IAAK,KACHoE,GAAW/C,GAAGD,GAAK,IACnBqB,EAAa2B,IACbzB,GAAW,SAAC3C,GAAD,OAAaA,EAAU,OAElC,MACF,IAAK,KACHoE,GAAW/C,GAAGD,GAAK,IACnBqB,EAAa2B,IACbzB,GAAW,SAAC3C,GAAD,OAAaA,EAAU,OAElC,MACF,IAAK,IACHoE,GAAW/C,GAAGD,GAAK,IACnBqB,EAAa2B,IACbvB,GAAU,SAAC3C,GAAD,OAAYA,EAAS,MAE/B,MACF,QACEkE,GAAW/C,GAAGD,GAAK,IACnBqB,EAAa2B,IAIjBrF,EAAO0G,KAAK,WAAYzB,GAAMxB,IAmDhC,OAhDAjD,qBAAU,WACRR,EAAO0G,KAAK,WAAY3B,GAAO5C,IAE/BnC,EAAOsH,GAAG,iBAAiB,SAACzG,EAAaC,EAAaqB,GACpD7B,QAAQC,IAAIM,GACRb,EAAOmC,KAAOA,IAChBoB,EAAkB1C,GAClB2C,EAAkB1C,OAGtBd,EAAOsH,GAAG,gBAAgB,SAACC,GACzB7D,EAAa6D,MAGfvH,EAAOsH,GAAG,oBAAoB,SAACE,GACzBxH,EAAOmC,KAAOqF,EAAKrF,IACrB0B,EAAc2D,EAAKvG,YAGvBjB,EAAOsH,GAAG,mBAAmB,SAACE,GACxBxH,EAAOmC,KAAOqF,EAAKrF,IACrB4B,GAAayD,EAAKrG,WAItBnB,EAAOsH,GAAG,WAAW,SAACG,GACpBtD,GAAasD,GACb7D,GAAW,SAAC3C,GAAD,OAAaA,EAAU,UAGpCjB,EAAOsH,GAAG,eAAe,WACvBhH,QAAQC,IAAI,aAjQhB,WACE0D,IAAU,GACVM,GAAmB,uBACnB,IAAImD,EAAWC,aAAY,WACzBtD,IAAa,SAACuD,GAAD,OAAUA,EAAO,KAE1B9C,GAAaM,SAAW,IAC1ByC,cAAcH,GACdzD,IAAU,GACVO,GAAiB,kBACjBkB,QAED,KAsPDoC,QAED,IAEHtH,qBAAU,WACRR,EAAO0G,KAAK,eAAgB7F,EAAaC,EAAamE,IACtDjF,EAAO0G,KAAK,gBAAiB3B,GAAO5C,GAAIlB,GACxCjB,EAAO0G,KAAK,eAAgBzB,GAAM9D,KACjC,CAACN,EAAaC,EAAaG,EAASE,EAAQ6C,GAAQI,GAAU3B,KAEjEjC,qBAAU,WACRsF,GAAcnF,GAEdL,QAAQC,IAAIkD,KACX,CAAC9C,IAGF,mCACE,sBAAKwB,GAAG,eAAR,UACE,cAAChC,EAAD,CAAYC,WAvPlB,SAAoB2H,GAClBpE,GAAS,SAAChD,GAAD,OAAoBoH,QAuPzB,cAACnH,EAAD,CACEI,eAAgBA,EAChBD,eAAgBA,EAChBF,YAAaA,EACbC,YAAaA,EACbG,QAASA,EACTC,WAAYA,EACZC,OAAQA,EACRC,UAAWA,GACXC,MAAO+C,KAET,gCACE,wBAAQ7B,UAAW+B,GAAkB0D,QAnR7C,WACE1H,QAAQC,IAAI,WACZP,EAAO0G,KAAK,kBAAmBzB,KAiRzB,oBACA,yBAAQ+C,QAAS1C,GAAjB,UAA4B,cAAC,IAAD,CAAM2C,GAAG,QAAT,mBAA5B,UAEF,cAACzF,EAAD,CAAgBvB,QAASA,EAASC,WAAYA,EAAYuB,cAAeA,KACzE,cAAC,EAAD,CACEvC,MAAOuD,EACP5C,YAAaA,EACbC,YAAaA,EACbE,eAAgBA,EAChBD,eAAgBA,S,YC1YX,SAASmH,IACpB,MAAqC9E,mBAAS,IAA9C,mBAAO+E,EAAP,KAAmBC,EAAnB,KAEEC,EAAS,uCAAG,4BAAA9C,EAAA,+EAEW7C,EAAW4F,IAAI,gBAF1B,OAEPC,EAFO,OAGbH,EAAeG,EAAUf,MACzBlH,QAAQC,IAAI4H,GAJC,gDAMd7H,QAAQmF,MAAR,MANc,yDAAH,qDAWb,OACE,sBAAKlD,UAAU,sBAAf,UACE,qBAAKA,UAAU,qBAAf,yBACA,sBAAKA,UAAU,6BAAf,UACI,wBAASA,UAAU,sBAAnB,kBAAuD,wBAAQA,UAAU,sBAAsByF,QAASK,EAAjD,+BAE3D,qBAAK9F,UAAU,2BAAf,SACE,kCACE,gCACE,6BACE,6CAGJ,kCACE,6BACE,wCAEF,6BACE,wCAEF,6BACE,wCAEF,6BACE,mD,MCxCC,SAASiG,IACpB,OACI,yBAAQjG,UAAU,SAAlB,UACI,qBAAKkG,IAAI,eAAeC,IAAI,SAAS,qBAAKD,IAAI,gBAAgBC,IAAI,SAClE,oBAAInG,UAAU,QAAd,uBACA,qBAAKkG,IAAI,gBAAgBC,IAAI,SAAS,qBAAKD,IAAI,kBAAkBC,IAAI,YCHlE,SAASC,IACpB,OACI,8BACG,sBAAKpG,UAAU,gBAAf,UACH,iCAEA,cAAC,EAAD,MAGA,uBAAMA,UAAU,iBAAhB,UACE,qBAAKA,UAAU,cAAckG,IAAI,yBAAyBC,IAAI,WAC9D,qBAAKnG,UAAU,gBAAf,SAA+B,gDAC/B,qBAAKA,UAAU,cAAckG,IAAI,wBAAwBC,IAAI,mB,MCbxD,SAASE,EAAWrB,GAE/B,OAEQ,cAAC,IAAD,CAAMsB,MAAO,CAAGC,eAAgB,QAAWb,GAAI,CAC3Cc,SAAQ,WAAOxB,EAAMyB,OADzB,SAGIzB,EAAM0B,W,YCPTC,EAAcC,IAAMC,gBAOpBC,EAAsB,SAAC9B,GAClC,MAAsCnE,mBAAS,MAA/C,mBAAOkG,EAAP,KAAoBC,EAApB,KACA,EAAkCnG,oBAAS,GAA3C,mBAAOoG,EAAP,KAAkBC,EAAlB,KAEAjJ,qBAAU,WACRkC,EAAW4F,IAAI,gBACZoB,MAAK,SAACC,GACLF,GAAa,GACbF,EAAeI,EAAInC,KAAK8B,gBAEzBM,OAAM,WACLL,EAAe,MACfE,GAAa,QAEhB,IAEH,IAAMI,EAAaC,QAAQR,GAE3B,OACE,cAACJ,EAAYa,SAAb,CACEC,MAAO,CAAEV,cAAaE,YAAWK,aAAYN,kBAD/C,SAGIC,EAA6B,KAAjBjC,EAAM0B,YA2BbgB,EAAU,kBAAMC,qBAAWhB,ICtDzB,SAASiB,IACpB,MAAuCF,IAAhCV,EAAP,EAAOA,eAAP,EAAuBD,YAQvB,OACI,8BACA,wBAAQtB,QAPU,kBACtBtF,EAAW0H,KAAK,YAAYC,SAAQ,WAClCd,EAAe,UAKb,2BCVO,SAASe,IAGpB,OACI,sBAAK/H,UAAU,eAAf,UACI,wBAAQA,UAAU,cAAlB,0BACA,cAAC4H,EAAD,IACA,qBAAK5H,UAAU,cAAckG,IAAI,wBAAwBC,IAAI,WAC7D,cAACE,EAAD,CAAYrG,UAAU,SAASyG,KAAK,OAApC,kBACA,cAACJ,EAAD,CAAYrG,UAAU,SAASyG,KAAK,cAApC,yBACA,cAACJ,EAAD,CAAarG,UAAU,SAASyG,KAAK,YAArC,4B,MCPG,SAASuB,IACtB,MAAoCnH,mBAAS,IAA7C,mBAAOoH,EAAP,KAAmBC,EAAnB,KAEA,EAAwBrH,mBAAS,IAAjC,mBAAOsH,EAAP,KACA,GADA,KAC0BtH,mBAAS,IAAnC,mBAAOuH,EAAP,KAAcC,EAAd,KAEMC,EAAW,uCAAG,WAAOC,GAAP,eAAAvF,EAAA,6DAClBjF,QAAQC,IAAIiK,GACNO,EAAS,CAAEC,SAAUR,GAC3BM,EAAEG,iBAHgB,kBAKVvI,EAAW0H,KAAK,cAAeW,GALrB,uDAOhBzK,QAAQmF,MAAR,MAPgB,QASlByF,IATkB,yDAAH,sDAYXA,EAAU,uCAAG,4BAAA3F,EAAA,+EAES7C,EAAW4F,IAAI,eAFxB,OAET6C,EAFS,OAIfP,EAASO,EAAU3D,MAJJ,gDAMflH,QAAQmF,MAAR,MANe,yDAAH,qDAchB,OAJAjF,qBAAU,WACR0K,MACC,IAEIE,MAAMT,GACX,sBAAKpI,UAAU,eAAf,UAOE,qBAAKA,UAAU,WACf,8BACGoI,EAAMvI,KAAI,SAAC6C,EAAMzD,GAChB,OACE,gCACE,eAAC,IAAD,CACEyG,GAAI,CACFc,SAAS,SAAD,OAAW9D,EAAKoG,KACxBC,MAAOrG,GAHX,kBAMQA,EAAK+F,YAEb,qDAAwB/F,EAAKsG,qBATrB/J,QAehB,qBAAKe,UAAU,SAAf,SACE,uBAAMiJ,SAAUX,EAAhB,UACE,uBACE7B,KAAK,WACLyC,KAAK,OACLC,SAAU,SAAC/K,GAAD,OAAW8J,EAAc9J,EAAMgL,OAAO3B,UAElD,iDAGJ,qBAAKzH,UAAU,cAGjB,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,SAAf,SACE,4BAAImI,MAEN,qBAAKnI,UAAU,c,MClFN,SAASqJ,IAEpB,IAAM7G,EAAOC,cAEb,OAEI,sBAAKzC,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,mBAAqCwC,EAAOiE,QAC5C,qBAAKzG,UAAU,iBACf,qBAAKA,UAAU,eAAf,gBACA,qBAAKA,UAAU,iBACf,qBAAKJ,GAAG,OAAR,2BCNG,SAAS0J,EAAOtE,GAC7B,MAA0BnE,mBAAS,sBAAnC,mBAAO0I,EAAP,KAAcC,EAAd,KACA,EAAgC3I,mBAAS,SAAzC,mBAAO4I,EAAP,KAAiBC,EAAjB,KACA,EAAoDhC,IAA5CJ,EAAR,EAAQA,WAAYN,EAApB,EAAoBA,eAAgBD,EAApC,EAAoCA,YAE9B4C,EAAY,uCAAG,WAAOpB,GAAP,eAAAvF,EAAA,6DACnBuF,EAAEG,iBADiB,kBAGIvI,EAAW0H,KAAK,UAAW,CAAE0B,QAAOE,aAHxC,OAGXG,EAHW,OAIjB5C,EAAe4C,EAAO3E,KAAK8B,aAJV,gDAMjBC,EAAe,MANE,yDAAH,sDAUlB,OAAOM,EACL,kCAAI,4BAAIP,EAAY8C,cAKpB,uBAAM7J,UAAU,OAAOiJ,SAAUU,EAAjC,UACE,oBAAI3J,UAAU,QAAd,oBACA,uBAAOA,UAAU,QAAQ8J,QAAQ,QAAjC,mBAIA,uBACE9J,UAAU,QACVJ,GAAG,QACHsJ,KAAK,QACLzB,MAAO8B,EACPJ,SAAU,SAACZ,GAAD,OAAOiB,EAASjB,EAAEa,OAAO3B,UAErC,uBAAOzH,UAAU,QAAQ8J,QAAQ,WAAjC,sBAGA,uBACE9J,UAAU,QACVJ,GAAG,WACHsJ,KAAK,WACLzB,MAAOgC,EACPN,SAAU,SAACZ,GAAD,OAAOmB,EAAYnB,EAAEa,OAAO3B,UAExC,wBAAQzH,UAAU,MAAlB,gBACA,oBAAGA,UAAU,QAAb,oCAC0B,IACxB,cAAC,IAAD,CAAM0F,GAAG,UAAU1F,UAAU,OAA7B,0B,ILZiB+J,E,oCMjCnBC,E,4MACJjB,MAAQ,CAENc,SAAU,QACVN,MAAO,qBACPE,SAAU,S,EAIZE,a,uCAAe,WAAOpB,GAAP,SAAAvF,EAAA,6DACbuF,EAAEG,iBADW,kBAWLvI,EAAW0H,KAAK,UAAW,EAAKkB,OAX3B,OAYX,EAAK/D,MAAMiF,QAAQ5K,KAAK,WAZb,gDAcXtB,QAAQmF,MAAR,MAdW,yD,wDAkBfgH,aAAe,SAAC3B,GACd,EAAK4B,SAAL,eAAiB5B,EAAEa,OAAO3C,KAAO8B,EAAEa,OAAO3B,S,4CAgB5C,WACE1J,QAAQC,IAAIoM,KAAKpF,OACjB,IAAQsC,EAAe8C,KAAKpF,MAAMqF,YAA1B/C,WACR,EAAqC8C,KAAKrB,MAAlCQ,EAAR,EAAQA,MAAOE,EAAf,EAAeA,SAAUI,EAAzB,EAAyBA,SACzB,OAAOvC,EAGP,cAAC,IAAD,CAAU5B,GAAG,UAEX,uBACE1F,UAAU,OACViJ,SAAUmB,KAAKT,aACfR,SAAUiB,KAAKF,aAHjB,UAKE,oBAAIlK,UAAU,QAAd,oBACA,uBAAOA,UAAU,QAAQ8J,QAAQ,QAAjC,mBAGA,uBACE9J,UAAU,QACVJ,GAAG,QACHsJ,KAAK,QACLzC,KAAK,QACL6D,aAAcf,IAEhB,uBAAOvJ,UAAU,QAAQ8J,QAAQ,WAAjC,sBAGA,uBACE9J,UAAU,QACVJ,GAAG,WACHsJ,KAAK,OACLzC,KAAK,WACL6D,aAAcT,IAGhB,uBAAO7J,UAAU,QAAQ8J,QAAQ,WAAjC,sBAGA,uBACE9J,UAAU,QACVJ,GAAG,WACHsJ,KAAK,WACLzC,KAAK,WACL6D,aAAcb,IAEhB,wBAAQzJ,UAAU,MAAlB,gBACA,oBAAGA,UAAU,QAAb,sCAC4B,IAC1B,cAAC,IAAD,CAAM0F,GAAG,UAAU1F,UAAU,OAA7B,8B,GA7FWuK,aAsGNC,GNrEUT,EMqEDC,ENpEf,SAAChF,GACN,OACE,cAAC2B,EAAY8D,SAAb,UACG,SAACC,GACA,OAAO,cAACX,EAAD,2BAAiB/E,GAAjB,IAAwBqF,YAAaK,U,MOXvCC,MAlBf,WACE,OACE,cAAC,EAAD,UACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAACxB,EAAD,MACpC,cAAC,IAAD,CAAOuB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAACvB,EAAD,MAC/B,cAAC,IAAD,CAAOsB,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,YCnB7BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7D,MAAK,YAAkD,IAA/C8D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,EAAQ,IAAUC,SAElBC,IAASC,OAEP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,UACE,cAAC,EAAD,QAIFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.f41de84c.chunk.js","sourcesContent":["import socketIOClient from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"https://spaderman.herokuapp.com\";\r\nexport const socket = socketIOClient(ENDPOINT);","//  const board2 = [\r\n//     [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",],\r\n//     [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",],\r\n//     [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",],\r\n//     [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",],\r\n//     [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",],\r\n//     [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",],\r\n//     [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",],\r\n//     [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",],\r\n//     [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",],\r\n//     [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",],\r\n// ]\r\n\r\nexport const board = [[\"K\", \"K\", 'R', \"K\", \"K\", 'GR', 'B', 'B', \"K\", 'BR'],\r\n    [\"K\", \"K\", 'B', 'R', 'BR', \"K\", \"K\", \"K\", 'R', 'BR'],\r\n ['BR', 'BR', \"K\", \"K\", \"K\", 'R', 'R', 'R', 'R', 'B'],\r\n[\"K\", \"K\", 'B', \"K\", 'B', \"K\", 'R', 'BR', 'R', \"K\"],\r\n [\"K\", 'BR', 'R', 'BR', 'B', 'R', 'BR', 'BR', 'R', 'R'],\r\n [\"K\", \"K\", 'BR', 'R', 'BR', \"K\", 'BR', \"K\", 'BR', 'BR'],\r\n ['BR', 'R', \"K\", \"K\", 'BR', \"K\", 'BR', \"K\", \"K\", 'B'],\r\n ['GR', \"K\", 'B', \"K\", 'B', 'BR', \"K\", \"K\", 'R', \"K\"],\r\n [\"K\", \"K\", \"K\", 'GR', 'R', \"K\", 'BR', 'BR', \"K\", \"K\"],\r\n ['B', 'GR', \"K\", \"K\", 'R', \"K\", \"K\", 'BR', 'BR', \"K\"]]\r\n\r\n// function randomizeBoardContent() {\r\n//     //put items randomly  inside the boards  : rubies and bombs\r\n//     for (let i = 0; i < board2.length; i++) {\r\n//       for (let j = 0; j < board2[i].length; j++) {\r\n//         board2[i][j] = Math.floor(Math.random() * 10);\r\n//         if (board2[i][j] < 2) {\r\n//           board2[i][j] = \"R\";\r\n//         } else if (board2[i][j] < 4) {\r\n//           board2[i][j] = \"BR\";\r\n//         } else if (board2[i][j] < 5) {\r\n//           board2[i][j] = \"GR\";\r\n//         } else if (board2[i][j] < \"K\") {\r\n//           board2[i][j] = \"B\";\r\n//         }\r\n//       }\r\n//     }\r\n    \r\n//   }\r\n \r\n//   randomizeBoardContent()\r\n\r\n//   export  const board = board2","import React, {useEffect} from 'react'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function GameListen({storeEvent,handleOther}) {\r\n\r\nconsole.log(\"render\")\r\n\r\nuseEffect(()=>{\r\n    window.addEventListener(\"keyup\", (event) => {\r\n        storeEvent(event)\r\n    })\r\n    \r\n},[])\r\n\r\n\r\n\r\n \r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function GameDisplay({\r\n  myXPosition,\r\n  myYPosition,\r\n  otherXPosition,\r\n  otherYPosition,\r\n  myScore,\r\n  otherScore,\r\n  myBomb,\r\n  otherBomb,\r\n  timer,\r\n}) {\r\n\r\n  \r\n  return (\r\n    <div>\r\n      my pos : [{myXPosition},{myYPosition}] other pos :[{otherXPosition},\r\n      {otherYPosition}] my score :{myScore}\r\n      other score :{otherScore}\r\n      my bombs: {myBomb}\r\n      other bombs : {otherBomb}\r\n      Time left : {timer}\r\n    </div>\r\n  );\r\n}\r\n","import \"../styles/GameBoard.css\";\r\nimport React, { useRef } from \"react\";\r\n\r\nexport default function GameBoard({\r\n  board,\r\n  myXPosition,\r\n  myYPosition,\r\n  otherXPosition,\r\n  otherYPosition,\r\n  \r\n}) {\r\n\r\n   \r\n  const getCSSClass = (i, j) => {\r\n    const classes = [];\r\n    const store = board[i][j]\r\n    classes.push(\r\n      i === myYPosition && j === myXPosition ? \"myPlayer\" : undefined\r\n    );\r\n    \r\n    classes.push( store.includes(\"T\") ? \"bombs\" : undefined) \r\n    classes.push( store.includes(\"X\") ? \"bomb-radius\" : undefined) \r\n    classes.push(\r\n      i === otherYPosition && j === otherXPosition ? \"otherPlayer\" : undefined\r\n    );\r\n    classes.push(board[i][j] === \"E\" ? \"dug\" : undefined);\r\n    return classes.filter((c) => c !== undefined).join(\" \");\r\n   \r\n  };\r\n  const getCSSClasss = (i, j) => {\r\n    const classes = [];\r\n\r\n    return classes.filter((c) => c !== undefined).join(\" \");\r\n    // i === otherYPosition && j === otherXPosition\r\n    // ? \"otherPlayer\"\r\n    // : board[i][j] === \"E\" ? \"dug\" : \"\"\r\n  };\r\n\r\n  \r\n\r\n\r\n  const fusionFunction = (i, j) => {\r\n    return getCSSClass(i, j) + \" \" + getCSSClasss(i, j);\r\n  };\r\n\r\n  return (\r\n    <div id=\"boardGame-wrapper\">\r\n      <div id=\"board-wrapper\">\r\n        {board.map((x, i) =>\r\n          x.map((y, j) => (\r\n            <div\r\n              className={fusionFunction(i, j)}\r\n              data-coord={{ x: j, y: i }}\r\n              data-x={j}\r\n              data-y={i}\r\n              key={j + \"-\" + i}\r\n              id={j + \"-\" + i}\r\n            ></div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function DisplayWinner({ myScore, otherScore,displayResult}) {\r\n  console.log(displayResult);\r\n  if (myScore === otherScore) {\r\n    return <p className={displayResult}>Draw</p>;\r\n  } else\r\n    return myScore > otherScore ? <p className={displayResult}>you win</p> : <p className={displayResult}> you lose</p>;\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\nconst APIHandler = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  withCredentials: true,\r\n});\r\n\r\nexport default APIHandler;\r\n","import \"../styles/Game.css\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { socket } from \"../js/socket\";\r\nimport { board } from \"../js/board.js\";\r\nimport { Link,Navigate } from \"react-router-dom\";\r\nimport GameListen from \"../components/GameListen.jsx\";\r\nimport GameDisplay from \"../components/GameDisplay.jsx\";\r\nimport GameBoard from \"../components/GameBoard\";\r\nimport DisplayWinner from \"../components/DisplayWinner\";\r\nimport APIHandler from \"../api/APIHandler\"\r\n\r\nlet bombAudio = [\r\n  new Audio(\"/sounds/bomb1.mp3\"),\r\n  new Audio(\"/sounds/bomb2.mp3\"),\r\n  new Audio(\"/sounds/bomb3.mp3\"),\r\n  new Audio(\"/sounds/bomb4.mp3\"),\r\n  new Audio(\"/sounds/bomb5.mp3\"),\r\n];\r\n\r\nlet digAudio = [\r\n  new Audio(\"/sounds/digging.mp3\"),\r\n  new Audio(\"/sounds/digging2.mp3\"),\r\n];\r\n\r\nlet gameAudio = new Audio(\"/sounds/game-music2.mp3\");\r\nlet gameIntro = new Audio(\"/sounds/intro2.mp3\");\r\nlet gameOutro = new Audio(\"/sounds/intro2.mp3\");\r\n\r\nlet getItemAudio = [\r\n  new Audio(\"/sounds/get-item.mp3\"),\r\n  new Audio(\"/sounds/get-item2.mp3\"),\r\n  new Audio(\"/sounds/get-item3.mp3\"),\r\n];\r\n\r\n/*\r\nconst [players, setWhoIsWho] = useState({\r\n    p1: null,\r\n    p2: null,\r\n  })\r\nconst players =  {\r\n  p1: null,\r\n  p2: null,\r\n};\r\n\r\nconst currentPlayerToSet = Object.entries(players).find(p => p === null);\r\ncurrentPlayerToSet = \"socket-id\"\r\n*/\r\n\r\nexport default function Game() {\r\n  \r\n  \r\n  const [myXPosition, setMyxPosition] = useState(5);\r\n  const [myYPosition, setMyyPosition] = useState(5);\r\n  const [otherXPosition, setOtherXPosition] = useState(5);\r\n  const [otherYPosition, setOtherYPosition] = useState(5);\r\n  const [boardGame, setBoardGame] = useState(board);\r\n  const [event, setEvent] = useState(\"\");\r\n  const [myScore, setMyScore] = useState(0);\r\n  const [otherScore, setOtherScore] = useState(0);\r\n  const [myBomb, setMyBomb] = useState(30);\r\n  const [otherBomb, setOtherBomb] = useState(30);\r\n  const [isBusy, setIsBusy] = useState(true);\r\n  const [isStunned, setIsStunned] = useState(false);\r\n  const [gameTimer, setGameTimer] = useState(12);\r\n  const [hideStartButton,setHideStartButton] = useState()\r\n  const [displayResult,setDisplayResult] = useState(\"hide-result\")\r\n  const myXPositionRef = useRef(myXPosition);\r\n  const myYPositionRef = useRef(myYPosition);\r\n  const otherXPositionRef = useRef(otherXPosition);\r\n  const otherYPositionRef = useRef(otherYPosition);\r\n  const gameTimerRef = useRef(gameTimer);\r\n  const params = useParams();\r\n  const room = params.id;\r\n  const myScoreRef = useRef(myScore)\r\n  const otherScoreRef= useRef(otherScore)\r\n\r\n  myXPositionRef.current = myXPosition;\r\n  myYPositionRef.current = myYPosition;\r\n  otherXPositionRef.current = otherXPosition;\r\n  otherYPositionRef.current = otherYPosition;\r\n  gameTimerRef.current = gameTimer;\r\n  myScoreRef.current = myScore\r\n  otherScoreRef.current = otherScore\r\n\r\n  const bombRadius = 2;\r\n\r\n  let cloneBoard;\r\n  \r\n  const leaveGame = async () => {\r\n    try {\r\n      await APIHandler.delete(`/rooms/${room}`)\r\n    }  catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  function startGame() {\r\n    setIsBusy(false);\r\n    setHideStartButton(\"start-button-hidden\")\r\n    let gameTime = setInterval(() => {\r\n      setGameTimer((time) => time - 1);\r\n\r\n      if (gameTimerRef.current <= 0) {\r\n        clearInterval(gameTime);\r\n        setIsBusy(true);\r\n        setDisplayResult(\"display-result\")\r\n        saveResult()\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  function sendSignal() {\r\n    console.log(\"sending\");\r\n    socket.emit(\"sendStartSignal\", room);\r\n  }\r\n  \r\n  const saveResult = async() => {\r\n    const result = {\r\n      player:\"toto\",\r\n      score : myScoreRef.current,\r\n      otherScore : otherScoreRef.current\r\n    }\r\n    console.log(result)\r\n  }\r\n\r\n\r\n  function storeEvent(evt) {\r\n    setEvent((event) => (event = evt));\r\n  }\r\n\r\n  const handlingInput = (event) => {\r\n    if (!isBusy && !isStunned) {\r\n      switch (event.key) {\r\n        case \"ArrowRight\":\r\n          setMyxPosition((myXPosition) =>\r\n            myXPosition < board.length - 1 ? myXPosition + 1 : myXPosition\r\n          );\r\n\r\n          break;\r\n        case \"ArrowDown\":\r\n          setMyyPosition((myYPosition) =>\r\n            myYPosition < board.length - 1 ? myYPosition + 1 : myYPosition\r\n          );\r\n          break;\r\n        case \"ArrowUp\":\r\n          setMyyPosition((myYPosition) =>\r\n            myYPosition > 0 ? myYPosition - 1 : myYPosition\r\n          );\r\n          break;\r\n        case \"ArrowLeft\":\r\n          setMyxPosition((myXPosition) => {\r\n            return myXPosition > 0 ? myXPosition - 1 : myXPosition;\r\n          });\r\n          break;\r\n        case \"l\":\r\n          dig(myXPosition, myYPosition);\r\n          digAudio[Math.floor(Math.random() * 2)].play();\r\n          setIsBusy(true);\r\n          setTimeout(() => {\r\n            setIsBusy(false);\r\n          }, 1000);\r\n          break;\r\n        case \"j\":\r\n          if (myBomb > 0) {\r\n            plantBomb(myXPosition, myYPosition);\r\n            plantedBomb();\r\n            setMyBomb((myBomb) => myBomb - 1);\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  function checkRadius(bomb, radius, xPos, yPos) {\r\n    console.log(xPos, yPos);\r\n\r\n    if (\r\n      bomb[0] - radius <= xPos &&\r\n      bomb[0] + radius >= xPos &&\r\n      bomb[1] - radius <= yPos &&\r\n      bomb[1] + radius >= yPos &&\r\n      (bomb[0] === xPos || bomb[1] === yPos)\r\n    ) {\r\n      return true;\r\n    } else return false;\r\n  }\r\n\r\n  function plantedBomb() {\r\n    const bombPlanted = [myXPosition, myYPosition];\r\n    console.log(\"bombavant\", bombPlanted);\r\n    setTimeout(() => {\r\n      if (\r\n        checkRadius(\r\n          bombPlanted,\r\n          bombRadius,\r\n          myXPositionRef.current,\r\n          myYPositionRef.current\r\n        )\r\n      ) {\r\n        setMyScore((myScore) => myScore - 200);\r\n        setIsStunned(true);\r\n        setTimeout(() => {\r\n          setIsStunned(false);\r\n        }, 1800);\r\n      }\r\n\r\n      if (\r\n        checkRadius(\r\n          bombPlanted,\r\n          bombRadius,\r\n          otherXPositionRef.current,\r\n          otherYPositionRef.current\r\n        )\r\n      ) {\r\n        socket.emit(\"sendStunned\", room, true);\r\n        setTimeout(() => {\r\n          socket.emit(\"sendStunned\", room, false);\r\n        }, 1800);\r\n      }\r\n    }, 2000);\r\n  }\r\n\r\n  const plantBomb = (x, y) => {\r\n    cloneBoard = [...boardGame];\r\n    const bufferValue = cloneBoard[y][x];\r\n    cloneBoard[y][x] += \"T\";\r\n\r\n    setBoardGame(cloneBoard);\r\n    socket.emit(\"digBoard\", room, boardGame);\r\n    setTimeout(function () {\r\n      cloneBoard[y][x] = bufferValue[0];\r\n      console.log(cloneBoard);\r\n      addRadiusX(x, y);\r\n      addRadiusY(x, y);\r\n      socket.emit(\"digBoard\", room, boardGame);\r\n      bombAudio[Math.floor(Math.random() * 5)].play();\r\n      setTimeout(() => {\r\n        removeRadiusX(x, y);\r\n        removeRadiusY(x, y);\r\n        socket.emit(\"digBoard\", room, boardGame);\r\n      }, 250);\r\n    }, 2000);\r\n  };\r\n\r\n  const addRadiusX = (x, y) => {\r\n    for (let i = -bombRadius; i <= bombRadius; i++) {\r\n      if (cloneBoard[y][x + i] !== undefined) {\r\n        cloneBoard[y][x + i] += \"X\";\r\n      }\r\n    }\r\n    setBoardGame(cloneBoard);\r\n  };\r\n  const addRadiusY = (x, y) => {\r\n    for (let i = -bombRadius; i <= bombRadius; i++) {\r\n      if (y + i >= 0 && y + i < 10) {\r\n        cloneBoard[y + i][x] += \"X\";\r\n      }\r\n    }\r\n    setBoardGame(cloneBoard);\r\n  };\r\n\r\n  const removeRadiusX = (x, y) => {\r\n    for (let i = -bombRadius; i <= bombRadius; i++) {\r\n      if (cloneBoard[y][x + i] !== undefined) {\r\n        let originalValue = boardGame[y][x + i];\r\n        cloneBoard[y][x + i] = originalValue[0];\r\n      }\r\n    }\r\n    setBoardGame(cloneBoard);\r\n  };\r\n\r\n  const removeRadiusY = (x, y) => {\r\n    for (let i = -bombRadius; i <= bombRadius; i++) {\r\n      if (y + i >= 0 && y + i < 10) {\r\n        let originalValue = boardGame[y + i][x];\r\n        cloneBoard[y + i][x] = originalValue[0];\r\n      }\r\n    }\r\n    setBoardGame(cloneBoard);\r\n  };\r\n\r\n  const dig = (x, y) => {\r\n    cloneBoard = [...boardGame];\r\n\r\n    switch (boardGame[y][x]) {\r\n      case \"R\":\r\n        cloneBoard[y][x] = \"E\";\r\n        setBoardGame(cloneBoard);\r\n        setMyScore((myScore) => myScore + 100);\r\n\r\n        break;\r\n      case \"BR\":\r\n        cloneBoard[y][x] = \"E\";\r\n        setBoardGame(cloneBoard);\r\n        setMyScore((myScore) => myScore + 200);\r\n\r\n        break;\r\n      case \"GR\":\r\n        cloneBoard[y][x] = \"E\";\r\n        setBoardGame(cloneBoard);\r\n        setMyScore((myScore) => myScore + 500);\r\n\r\n        break;\r\n      case \"B\":\r\n        cloneBoard[y][x] = \"E\";\r\n        setBoardGame(cloneBoard);\r\n        setMyBomb((myBomb) => myBomb + 15);\r\n\r\n        break;\r\n      default:\r\n        cloneBoard[y][x] = \"E\";\r\n        setBoardGame(cloneBoard);\r\n\r\n        break;\r\n    }\r\n    socket.emit(\"digBoard\", room, boardGame);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"new-user\", params.id);\r\n\r\n    socket.on(\"trackMovement\", (myXPosition, myYPosition, id) => {\r\n      console.log(myXPosition);\r\n      if (socket.id !== id) {\r\n        setOtherXPosition(myXPosition);\r\n        setOtherYPosition(myYPosition);\r\n      }\r\n    });\r\n    socket.on(\"refreshBoard\", (props) => {\r\n      setBoardGame(props);\r\n    });\r\n\r\n    socket.on(\"otherPlayerScore\", (data) => {\r\n      if (socket.id !== data.id) {\r\n        setOtherScore(data.myScore);\r\n      }\r\n    });\r\n    socket.on(\"otherPlayerBomb\", (data) => {\r\n      if (socket.id !== data.id) {\r\n        setOtherBomb(data.myBomb);\r\n      }\r\n    });\r\n\r\n    socket.on(\"Stunned\", (message) => {\r\n      setIsStunned(message);\r\n      setMyScore((myScore) => myScore - 100);\r\n    });\r\n\r\n    socket.on(\"startSignal\", () => {\r\n      console.log(\"game on !\");\r\n      startGame();\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"playerMoving\", myXPosition, myYPosition, room);\r\n    socket.emit(\"transferScore\", params.id, myScore);\r\n    socket.emit(\"transferBomb\", room, myBomb);\r\n  }, [myXPosition, myYPosition, myScore, myBomb, isBusy, gameTimer,displayResult]);\r\n\r\n  useEffect(() => {\r\n    handlingInput(event);\r\n\r\n    console.log(boardGame);\r\n  }, [event]);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"game-wrapper\">\r\n        <GameListen storeEvent={storeEvent} />\r\n        <GameDisplay\r\n          otherYPosition={otherYPosition}\r\n          otherXPosition={otherXPosition}\r\n          myXPosition={myXPosition}\r\n          myYPosition={myYPosition}\r\n          myScore={myScore}\r\n          otherScore={otherScore}\r\n          myBomb={myBomb}\r\n          otherBomb={otherBomb}\r\n          timer={gameTimer}\r\n        />\r\n        <div>\r\n          <button className={hideStartButton}  onClick={sendSignal}>Start </button>\r\n          <button onClick={leaveGame}><Link to=\"/home\">Quit </Link> </button>\r\n        </div>\r\n        <DisplayWinner  myScore={myScore} otherScore={otherScore} displayResult={displayResult}  />\r\n        <GameBoard\r\n          board={boardGame}\r\n          myXPosition={myXPosition}\r\n          myYPosition={myYPosition}\r\n          otherYPosition={otherYPosition}\r\n          otherXPosition={otherXPosition}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport \"../styles/Leaderboard.css\";\r\nimport APIHandler from \"../api/APIHandler.js\"\r\n\r\nexport default function Leaderboard() {\r\n    const [displayData,setDisplayData] = useState(\"\") \r\n\r\nconst fetchData = async() =>{\r\n try {\r\n     const dataBoard = await APIHandler.get(\"/leaderboard\")\r\n     setDisplayData(dataBoard.data)\r\n     console.log(displayData)\r\n } catch  (err) {\r\n    console.error(err);\r\n  }\r\n\r\n}\r\n\r\n  return (\r\n    <div className=\"leaderboard-wrapper\">\r\n      <div className=\"grid-1-leaderboard\">Leaderboard</div>\r\n      <div className=\"grid-2-leaderboard-buttons\">\r\n          <button  className=\"leaderboard-buttons\" >Wins</button><button className=\"leaderboard-buttons\" onClick={fetchData}>Highest Scores</button>\r\n      </div>\r\n      <div className=\"grid-3-table-leaderboard\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>content</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>list</td>\r\n            </tr>\r\n            <tr>\r\n              <td>list</td>\r\n            </tr>\r\n            <tr>\r\n              <td>list</td>\r\n            </tr>\r\n            <tr>\r\n              <td>list</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function MainTitle() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src=\"./img/R2.png\" alt=\"icon\" /><img src=\"./img/Gr2.png\" alt=\"icon\" />\r\n            <h1 className=\"title\">Spaderman</h1>\r\n            <img src=\"./img/Br2.png\" alt=\"icon\" /><img src=\"./img/bomb2.png\" alt=\"icon\" />\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../styles/Index.css\"\r\nimport MainTitle from '../components/MainTitle'\r\n\r\nexport default function Index() {\r\n    return (\r\n        <div>\r\n           <div className=\"index-wrapper\" >\r\n        <header >\r\n        \r\n        <MainTitle/>\r\n          {/* <NavMain /> */}\r\n        </header>\r\n        <main className=\"main-container\">\r\n          <img className=\"image-title\" src=\"./img/blue-shovel4.png\" alt=\"avatar\" />\r\n          <div className=\"signin-signup\"><p>signin/signup</p></div>\r\n          <img className=\"image-title\" src=\"./img/red-shovel4.png\" alt=\"avatar\" />\r\n        </main>\r\n        </div> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function ButtonLink(props) {\r\n    \r\n    return (\r\n        \r\n            <Link style={{  textDecoration: 'none' }}  to={{\r\n                pathname : `/${props.name}`,\r\n                \r\n            }}>{props.children}</Link>\r\n        \r\n    )\r\n}\r\n\r\n\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport APIHandler from \"./../api/APIHandler\";\r\n\r\nexport const UserContext = React.createContext();\r\n\r\n/**\r\n *\r\n * @param {Object} props\r\n * @returns a Provider wrappinng the authentication logic\r\n */\r\nexport const UserContextProvider = (props) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    APIHandler.get(\"/is-loggedin\")\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n        setCurrentUser(res.data.currentUser);\r\n      })\r\n      .catch(() => {\r\n        setCurrentUser(null);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const isLoggedIn = Boolean(currentUser); // checked on every render => passed to the\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{ currentUser, isLoading, isLoggedIn, setCurrentUser }}\r\n    >\r\n      {!isLoading ? props.children : null}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * provide the UserContext to class/ based components\r\n * in  classes, the UserContext is bound to this.props.userContext\r\n * @param {React.Component} MyComponent any class based component\r\n * @returns A consumer component accessign the values exposed by the UserContext\r\n */\r\nexport const withAuth = (MyComponent) => {\r\n  return (props) => {\r\n    return (\r\n      <UserContext.Consumer>\r\n        {(context) => {\r\n          return <MyComponent {...props} userContext={context} />;\r\n        }}\r\n      </UserContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\n/**\r\n * a utility function (shortcut) so you don't have to import the Context + useContext in you app's functionnal components\r\n * @returns\r\n */\r\nexport const useAuth = () => useContext(UserContext);\r\n","import React, { useContext } from \"react\";\r\nimport APIHandler from \"../api/APIHandler\";\r\nimport { useAuth } from \"../auth/UserContext\";\r\n\r\n\r\nexport default function Logout() {\r\n    const {setCurrentUser, currentUser } = useAuth();\r\n\r\n\r\n    const handleSignout = () =>\r\n    APIHandler.post(\"/signout\").finally(() => {\r\n      setCurrentUser(null);\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n        <button onClick={handleSignout}>La batarrdd</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../styles/Home.css\"\r\nimport ButtonLink from '../components/ButtonLink'\r\nimport Logout from '../components/Logout'\r\nimport { useAuth } from \"../auth/UserContext\";\r\n\r\nexport default function Home() {\r\n   \r\n    \r\n    return (\r\n        <div className=\"home-wrapper\">\r\n            <header className=\"header-home\">Welcome Name</header>\r\n            <Logout/>\r\n            <img className=\"avatar-home\" src=\"/img/blue-shovel4.png\" alt=\"avatar\" />\r\n            <ButtonLink className=\"grid-1\" name=\"play\">Play</ButtonLink>\r\n            <ButtonLink className=\"grid-2\" name=\"leaderBoard\">LeaderBoard</ButtonLink>\r\n            <ButtonLink  className=\"grid-3\" name=\"howtoplay\">How To Play</ButtonLink>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { socket } from \"../js/socket\";\r\nimport \"../styles/Play.css\";\r\nimport HomeButton from \"../components/HomeButton\";\r\nimport ButtonLink from \"../components/ButtonLink\";\r\nimport { Link } from \"react-router-dom\";\r\nimport APIHandler from \"../api/APIHandler\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Play() {\r\n  const [createRoom, SetcreateRoom] = useState(\"\");\r\n\r\n  const [test, setTest] = useState(\"\");\r\n  const [rooms, setRooms] = useState(9);\r\n\r\n  const handleClick = async (e) => {\r\n    console.log(createRoom);\r\n    const toSend = { roomName: createRoom };\r\n    e.preventDefault();\r\n    try {\r\n      await APIHandler.post(\"/play/rooms\", toSend);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    fetchRooms();\r\n  };\r\n\r\n  const fetchRooms = async () => {\r\n    try {\r\n      const dataRooms = await APIHandler.get(\"/play/rooms\");\r\n\r\n      setRooms(dataRooms.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRooms();\r\n  }, []);\r\n\r\n  return isNaN(rooms) ? (\r\n    <div className=\"play-wrapper\">\r\n      {/* <HomeButton className=\"home\" name=\"home\">\r\n        Home\r\n      </HomeButton>\r\n      <ButtonLink className=\"logout\" name=\"logout\">\r\n        Logout\r\n      </ButtonLink> */}\r\n      <div className=\"grid-1\"></div>\r\n      <div>\r\n        {rooms.map((room, i) => {\r\n          return (\r\n            <div key={i}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/game/${room._id}`,\r\n                  state: room,\r\n                }}\r\n              >\r\n                Join {room.roomName}\r\n              </Link>\r\n              <p>Number of players : {room.numberOfPlayers}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"grid-2\">\r\n        <form onSubmit={handleClick}>\r\n          <input\r\n            name=\"roomName\"\r\n            type=\"text\"\r\n            onChange={(event) => SetcreateRoom(event.target.value)}\r\n          />\r\n          <button>Create</button>\r\n        </form>\r\n      </div>\r\n      <div className=\"grid-3\"></div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"play-wrapper\">\r\n      <div className=\"grid-2\">\r\n        <p>{test}</p>\r\n      </div>\r\n      <div className=\"grid-3\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport \"../styles/lobby.css\"\r\nimport { useParams } from 'react-router'\r\nexport default function Lobby() {\r\n\r\n    const params=useParams()\r\n    \r\n    return (\r\n        \r\n        <div className=\"lobby-wrapper\">\r\n            <div className=\"lobby-header\">hello {params.name}</div>\r\n            <div className=\"lobby-grid-1\"></div>\r\n            <div className=\"lobby-grid-2\">VS</div>\r\n            <div className=\"lobby-grid-3\"></div>\r\n            <div id=\"star\">Start-Game</div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport { Link,Navigate } from \"react-router-dom\";\r\n// custom tools\r\nimport { useAuth } from \"../auth/UserContext\";\r\nimport APIHandler from \"../api/APIHandler\";\r\n\r\n\r\nexport default function Signin(props) {\r\n  const [email, setEmail] = useState(\"admin@foobarbaz.io\");\r\n  const [password, setPassword] = useState(\"12345\");\r\n  const { isLoggedIn, setCurrentUser, currentUser } = useAuth();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const apiRes = await APIHandler.post(\"/signin\", { email, password });\r\n      setCurrentUser(apiRes.data.currentUser);\r\n    } catch (err) {\r\n      setCurrentUser(null);\r\n    }\r\n  };\r\n\r\n  return isLoggedIn ? (\r\n    <p> <p>{currentUser.username}</p></p>\r\n    \r\n\r\n\r\n  ) : (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <h1 className=\"title\">Signin</h1>\r\n      <label className=\"label\" htmlFor=\"email\">\r\n        email\r\n      </label>\r\n     \r\n      <input\r\n        className=\"input\"\r\n        id=\"email\"\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <label className=\"label\" htmlFor=\"password\">\r\n        password\r\n      </label>\r\n      <input\r\n        className=\"input\"\r\n        id=\"password\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button className=\"btn\">ok</button>\r\n      <p className=\"parag\">\r\n        No account yet ? please{\" \"}\r\n        <Link to=\"/signup\" className=\"link\">\r\n          signup\r\n        </Link>\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link,Navigate } from \"react-router-dom\";\r\n// custom tools\r\nimport APIHandler from \"../api/APIHandler\";\r\n\r\nimport { withAuth } from \"./../auth/UserContext\";\r\n// styles\r\n\r\n\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    \r\n    username: \"admin\",\r\n    email: \"admin@foobarbaz.io\",\r\n    password: \"12345\",\r\n  };\r\n\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // const fd = new FormData();\r\n    // // create a form data (programatic form, to send the file as binary)\r\n    // fd.append(\"email\", this.state.email);\r\n    // fd.append(\"password\", this.state.password);\r\n    // fd.append(\"username\", this.state.username);\r\n    \r\n\r\n    try {\r\n      await APIHandler.post(\"/signup\", this.state);\r\n      this.props.history.push(\"/signin\");\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n//   handleImage = (e) => {\r\n//     // console.log(\"Signup@handle image\", e.target.files[0]);\r\n//     this.setState({ avatar: e.target.files[0] }, () => {\r\n//       const reader = new FileReader();\r\n//       reader.onloadend = () => {\r\n//         // when the fileREader ends  ...\r\n//         const baseString = reader.result; // get the image as a base64 encoded string\r\n//         this.setState({ tmpAvatar: baseString }); // set the tmp avatar as an image source before upload\r\n//       };\r\n//       reader.readAsDataURL(this.state.avatar); // read the file from the local disk\r\n//     });\r\n//   };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const { isLoggedIn } = this.props.userContext;\r\n    const { email, password, username} = this.state;\r\n    return isLoggedIn ? (\r\n      // avoid the component to be rendered if user is already logged in\r\n    //   <Redirect to=\"/dashboard\" />\r\n    <Navigate to=\"/home\" />\r\n    ) : (\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={this.handleSubmit}\r\n        onChange={this.handleChange}\r\n      >\r\n        <h1 className=\"title\">Signup</h1>\r\n        <label className=\"label\" htmlFor=\"email\">\r\n          email\r\n        </label>\r\n        <input\r\n          className=\"input\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          defaultValue={email}\r\n        />\r\n        <label className=\"label\" htmlFor=\"username\">\r\n          username\r\n        </label>\r\n        <input\r\n          className=\"input\"\r\n          id=\"username\"\r\n          type=\"text\"\r\n          name=\"username\"\r\n          defaultValue={username}\r\n        />\r\n        \r\n        <label className=\"label\" htmlFor=\"password\">\r\n          password\r\n        </label>\r\n        <input\r\n          className=\"input\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          defaultValue={password}\r\n        />\r\n        <button className=\"btn\">ok</button>\r\n        <p className=\"parag\">\r\n          Already a member ? please{\" \"}\r\n          <Link to=\"/signin\" className=\"link\">\r\n            signin\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(Signup);\r\n","import \"./App.css\";\r\n\r\nimport \"./styles/MainTitle.css\";\r\nimport React from \"react\";\r\n\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Game from \"./views/Game\";\r\nimport Test from \"./views/Test\";\r\nimport Leaderboard from \"./views/Leaderboard\";\r\nimport Index from \"./views/Index\";\r\nimport Home from \"./views/Home\";\r\nimport Play from \"./views/Play\";\r\nimport Lobby from \"./views/Lobby\";\r\nimport Signin from \"./views/Signin\";\r\nimport Signup from \"./views/Signup\";\r\nimport { UserContextProvider } from \"./auth/UserContext\";\r\nimport { ProtectedRoute } from \"./auth/ProtectedRoute\";\r\n// pages components\r\n\r\nfunction App() {\r\n  return (\r\n    <UserContextProvider>\r\n        <Routes>\r\n          <Route path=\"/game/:id\" element={<Game />} />\r\n          <Route path=\"/lobby/:name\" element={<Lobby />} />\r\n          <Route path=\"/\" element={<Index />} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/signin\" element={<Signin/>} />\r\n          <Route path=\"/signup\" element={<Signup/>} />\r\n          <Route path=\"/play\" element={<Play />} />\r\n          <Route path=\"/leaderBoard\" element={<Leaderboard />} />\r\n          <Route path=\"/howtoplay\" element={<Play />} />\r\n        </Routes>\r\n    </UserContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nrequire(\"dotenv\").config(); \r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}